{"version":3,"file":"index.ts","sources":["/Users/kokiriho/Documents/Projects/FindBeer/NextPint/api/src/index.ts"],"names":[],"mappings":"AAAA,mDAAmD;AAEnD,OAAO,EAAE,IAAI,EAAE,MAAM,MAAM,CAAC;AAC5B,OAAO,EAAE,IAAI,EAAE,MAAM,WAAW,CAAC;AACjC,OAAO,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AACpD,OAAO,EAAE,cAAc,EAAE,MAAM,oBAAoB,CAAC;AACpD,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAQ/C,MAAM,GAAG,GAAG,IAAI,IAAI,EAA2B,CAAC;AAEhD,mBAAmB;AACnB,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,aAAa,CAAC;IACzB,aAAa,EAAE,MAAM;IACrB,mBAAmB,EAAE,SAAS;IAC9B,cAAc,EAAE,iCAAiC;IACjD,cAAc,EAAE,eAAe;CAChC,CAAC,CAAC,CAAC;AAEJ,gDAAgD;AAChD,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC;IAChB,MAAM,EAAE;QACN,gCAAgC;QAChC,uBAAuB;QACvB,uBAAuB;KACxB;IACD,YAAY,EAAE,CAAC,cAAc,EAAE,QAAQ,EAAE,eAAe,CAAC;IACzD,YAAY,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,SAAS,CAAC;IACxC,aAAa,EAAE,EAAE;IACjB,MAAM,EAAE,KAAK;IACb,WAAW,EAAE,KAAK;CACnB,CAAC,CAAC,CAAC;AAEJ,aAAa;AACb,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE;IACjB,OAAO,CAAC,CAAC,IAAI,CAAC;QACZ,IAAI,EAAE,cAAc;QACpB,OAAO,EAAE,CAAC,CAAC,GAAG,CAAC,WAAW,IAAI,IAAI;QAClC,WAAW,EAAE,CAAC,CAAC,GAAG,CAAC,WAAW,IAAI,YAAY;KAC/C,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,eAAe;AACf,GAAG,CAAC,KAAK,CAAC,eAAe,EAAE,cAAc,CAAC,CAAC;AAC3C,GAAG,CAAC,KAAK,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;AAEtC,cAAc;AACd,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,OAAO,CAAC,CAAC,IAAI,CAAC;QACZ,MAAM,EAAE,OAAO;QACf,KAAK,EAAE;YACL,IAAI,EAAE,WAAW;YACjB,OAAO,EAAE,sCAAsC;SAChD;QACD,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;KACpC,EAAE,GAAG,CAAC,CAAC;AACV,CAAC,CAAC,CAAC;AAEH,gBAAgB;AAChB,GAAG,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE;IACrB,iCAAiC;IACjC,IAAI,CAAC,CAAC,GAAG,CAAC,WAAW,KAAK,aAAa,EAAE,CAAC;QACxC,OAAO,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,OAAO,EAAE,EAAE,GAAG,CAAC,CAAC;IAC9C,CAAC;IAED,OAAO,CAAC,CAAC,IAAI,CAAC;QACZ,MAAM,EAAE,OAAO;QACf,KAAK,EAAE;YACL,IAAI,EAAE,gBAAgB;YACtB,OAAO,EAAE,mCAAmC;YAC5C,OAAO,EAAE,CAAC,CAAC,GAAG,CAAC,WAAW,KAAK,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS;SACvE;QACD,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;KACpC,EAAE,GAAG,CAAC,CAAC;AACV,CAAC,CAAC,CAAC;AAEH,eAAe,GAAG,CAAC","sourcesContent":["/// <reference types=\"@cloudflare/workers-types\" />\n\nimport { Hono } from 'hono';\nimport { cors } from 'hono/cors';\nimport { secureHeaders } from 'hono/secure-headers';\nimport { templateRoutes } from './routes/templates';\nimport { healthRoutes } from './routes/health';\n\nexport type WorkerEnv = {\n  DB: D1Database;\n  ENVIRONMENT: string;\n  API_VERSION: string;\n}\n\nconst app = new Hono<{ Bindings: WorkerEnv }>();\n\n// Security headers\napp.use('*', secureHeaders({\n  xFrameOptions: 'DENY',\n  xContentTypeOptions: 'nosniff',\n  referrerPolicy: 'strict-origin-when-cross-origin',\n  xXssProtection: '1; mode=block',\n}));\n\n// CORS middleware - Allow only specific origins\napp.use('*', cors({\n  origin: [\n    'https://nextpint-web.pages.dev',\n    'http://localhost:3000',\n    'http://localhost:8081'\n  ],\n  allowHeaders: ['Content-Type', 'Accept', 'Authorization'],\n  allowMethods: ['GET', 'POST', 'OPTIONS'],\n  exposeHeaders: [],\n  maxAge: 86400,\n  credentials: false,\n}));\n\n// Base route\napp.get('/', (c) => {\n  return c.json({\n    name: 'NextPint API',\n    version: c.env.API_VERSION || 'v1',\n    environment: c.env.ENVIRONMENT || 'production',\n  });\n});\n\n// Mount routes\napp.route('/v1/templates', templateRoutes);\napp.route('/v1/health', healthRoutes);\n\n// 404 handler\napp.notFound((c) => {\n  return c.json({\n    status: 'error',\n    error: {\n      code: 'NOT_FOUND',\n      message: 'The requested resource was not found',\n    },\n    timestamp: new Date().toISOString(),\n  }, 404);\n});\n\n// Error handler\napp.onError((err, c) => {\n  // Only log errors in development\n  if (c.env.ENVIRONMENT === 'development') {\n    console.error(`Error: ${err.message}`, err);\n  }\n  \n  return c.json({\n    status: 'error',\n    error: {\n      code: 'INTERNAL_ERROR',\n      message: 'An internal server error occurred',\n      details: c.env.ENVIRONMENT === 'development' ? err.message : undefined,\n    },\n    timestamp: new Date().toISOString(),\n  }, 500);\n});\n\nexport default app;"]}