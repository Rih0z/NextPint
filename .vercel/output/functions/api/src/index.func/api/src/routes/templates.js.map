{"version":3,"file":"templates.ts","sources":["/Users/kokiriho/Documents/Projects/FindBeer/NextPint/api/src/routes/templates.ts"],"names":[],"mappings":"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","sourcesContent":["import { Hono } from 'hono';\nimport type { WorkerEnv } from '../index';\n\nconst templates = new Hono<{ Bindings: WorkerEnv }>();\n\n// GET /v1/templates\ntemplates.get('/', async (c) => {\n  const { version, category, locale = 'ja-JP' } = c.req.query();\n  \n  try {\n    let query = `\n      SELECT id, name, description, category, version, locale, template, variables, metadata, created_at, updated_at\n      FROM prompt_templates\n      WHERE is_active = true AND locale = ?\n    `;\n    const params: any[] = [locale];\n\n    if (category) {\n      query += ' AND category = ?';\n      params.push(category);\n    }\n\n    if (version) {\n      query += ' AND version = ?';\n      params.push(version);\n    }\n\n    query += ' ORDER BY created_at DESC LIMIT 20';\n\n    const { results } = await c.env.DB.prepare(query).bind(...params).all();\n\n    // Parse JSON fields\n    const templates = results.map((row: any) => ({\n      ...row,\n      variables: JSON.parse(row.variables || '[]'),\n      metadata: JSON.parse(row.metadata || '{}'),\n      createdAt: row.created_at,\n      updatedAt: row.updated_at,\n    }));\n\n    return c.json({\n      status: 'success',\n      data: {\n        templates,\n        pagination: {\n          total: templates.length,\n          page: 1,\n          limit: 20,\n          hasNext: false,\n        },\n        meta: {\n          latestVersion: '1.0.0',\n          totalCategories: 4,\n        },\n      },\n    });\n  } catch (error) {\n    throw error;\n  }\n});\n\n// GET /v1/templates/:id\ntemplates.get('/:id', async (c) => {\n  const { id } = c.req.param();\n  \n  try {\n    const { results } = await c.env.DB.prepare(`\n      SELECT id, name, description, category, version, locale, template, variables, metadata, created_at, updated_at\n      FROM prompt_templates\n      WHERE id = ? AND is_active = true\n    `).bind(id).all();\n\n    if (results.length === 0) {\n      return c.json({\n        status: 'error',\n        error: {\n          code: 'TEMPLATE_NOT_FOUND',\n          message: '指定されたテンプレートが見つかりません',\n          details: {\n            templateId: id,\n          },\n        },\n        timestamp: new Date().toISOString(),\n      }, 404);\n    }\n\n    const row = results[0] as any;\n    const template = {\n      ...row,\n      variables: JSON.parse(row.variables || '[]'),\n      metadata: JSON.parse(row.metadata || '{}'),\n      examples: [], // TODO: Load from separate table if needed\n      createdAt: row.created_at,\n      updatedAt: row.updated_at,\n    };\n\n    return c.json({\n      status: 'success',\n      data: {\n        template,\n      },\n    });\n  } catch (error) {\n    throw error;\n  }\n});\n\nexport const templateRoutes = templates;"]}